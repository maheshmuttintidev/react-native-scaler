# GitHub Actions workflow for auto-publishing a React Native package with Yarn PnP
name: Publish Package

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for git operations
          token: ${{ secrets.GH_TOKEN }} # Use a PAT for push access

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      # Set up Yarn with cache
      - name: Set up Yarn
        run: |
          corepack enable
          yarn set version stable
          yarn config set nodeLinker pnp
          yarn config set pnpMode strict
          yarn config set enableStrictSsl true

      # Cache Yarn dependencies
      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            .yarn/unplugged
          key: yarn-cache-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-cache-

      # Install dependencies with Yarn PnP
      - name: Install dependencies
        run: yarn install --immutable

      # Verify package.json exists
      - name: Verify package.json
        run: |
          if [ ! -f package.json ]; then
            echo "Error: package.json not found"
            exit 1
          fi

      # Configure git user for commits
      - name: Configure git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      # Bump version and create git tag
      - name: Bump version
        run: |
          echo "Current version: $(node -p "require('./package.json').version")"
          node -e "const fs = require('fs'); const pkg = require('./package.json'); const [major, minor, patch] = pkg.version.split('.').map(Number); pkg.version = \`\${major}.\${minor}.\${patch + 1}\`; fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));"
          git add package.json
          git commit -m "chore: bump patch version [skip ci]" || echo "No changes to commit"
          git push origin main
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "New version: $NEW_VERSION"
          git tag v${NEW_VERSION}
          git push origin v${NEW_VERSION}
        env:
          NODE_OPTIONS: --require ./.pnp.cjs # Ensure Yarn PnP is loaded for Node.js

      # Publish to npm
      - name: Publish to npm
        run: yarn npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}