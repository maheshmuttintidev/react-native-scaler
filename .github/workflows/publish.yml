name: Publish Package

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'

      # Set up Yarn
      - name: Set up Yarn
        run: |
          corepack enable
          yarn set version 4.9.2
          yarn config set nodeLinker node-modules
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

      # Install dependencies
      - name: Install dependencies
        run: yarn install --immutable

      # Verify package.json exists
      - name: Verify package.json
        run: |
          if [ ! -f package.json ]; then
            echo "Error: package.json not found"
            exit 1
          fi

      # Build package
      - name: Build package
        run: |
          yarn build || { echo "Build failed"; exit 1; }
          ls -la dist

      # Verify dist folder
      - name: Verify dist folder
        run: |
          ls -la dist
          if [ ! -f dist/index.js ] || [ ! -f dist/index.esm.js ] || [ ! -f dist/index.d.ts ]; then
            echo "Error: dist files missing"
            exit 1
          fi

      # Configure git user for commits
      - name: Configure git
        run: |
          git config user.name "maheshmuttintidev"
          git config user.email "maheshmuttintidev@gmail.com"

      # Bump version and create git tag
      - name: Bump version
        run: |
          echo "Current version: $(node -p "require('./package.json').version")"
          yarn version patch
          git add package.json
          git commit -m "chore: bump patch version [skip ci]" || echo "No changes to commit"
          git push origin main
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "New version: $NEW_VERSION"
          git tag v${NEW_VERSION}
          git push origin v${NEW_VERSION}

      # Debug npm authentication
      - name: Debug npm authentication
        run: |
          echo "NPM_TOKEN is set: ${{ secrets.NPM_TOKEN != '' }}"
          npm whoami
          echo "Package name: $(node -p "require('./package.json').name")"
          echo "Package version: $(node -p "require('./package.json').version")"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Publish to npm
      - name: Publish to npm
        run: yarn npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}